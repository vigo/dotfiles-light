#!/usr/bin/env bash

if [[ "$(command -v brew)" ]]; then
    brew_prefix="$(brew --prefix)"

    if [[ -f "${brew_prefix}/etc/bash_completion" ]]; then
        # shellcheck source=/dev/null
        source "${brew_prefix}/etc/bash_completion"
    fi
    
    # brew install coreutils, gnu-ls is installed?
    if [[ "$(command -v gls)" ]]; then
        alias ls="gls -h --color --group-directories-first"
        alias ll="ls -al"
        alias la="ls -A"
        alias l="ls -Cp"
        export DFL_LS_COLORABLE=1
    fi
else
    alias ls="ls -hG@"
    alias ll="ls -al"
    alias la="ls -A"
    alias l="ls -CF"
fi

MACOSX_VERSION="$(sw_vers -productVersion)"
export MACOSX_VERSION

# osx prompt shell
# -----------------------------------------------------------------------------
# shellcheck disable=SC2034
PS1_OSX_BASIC="${PROMPT_MEMORY}${PROMPT_BATTERY}
${PROMPT_USER_AND_HOSTNAME}
${PROMPT_GIT}${PROMPT_HG}
$ "

# shellcheck disable=SC2034
PS1_OSX_ADVANCED="${PROMPT_HORIZONTAL_LINE}
${PROMPT_MEMORY}${PROMPT_BATTERY}
${PROMPT_USER_AND_HOSTNAME}
${PROMPT_DATABASE_STATUS}${PROMPT_DOCKER_STATUS}${PROMPT_VIRTUALENV}${PROMPT_RUBY_RBENV}${PROMPT_PYTHON_PYENV}${PROMPT_NODE_VERSION}${PROMPT_GO_VERSION}${PROMPT_PGVM_VERSION}${PROMPT_GIT}${PROMPT_HG}
$ "
# -----------------------------------------------------------------------------


# osx specific aliases
# -----------------------------------------------------------------------------
alias desktop_hide="defaults write com.apple.finder CreateDesktop -bool false;killall Finder;"
alias desktop_show="defaults write com.apple.finder CreateDesktop -bool true;killall Finder;"
alias shadow_screenshot_disable='defaults write com.apple.screencapture disable-shadow -bool true && killall SystemUIServer'
alias shadow_screenshot_enable='defaults write com.apple.screencapture disable-shadow -bool false && killall SystemUIServer'
alias ds_store_clear="find . -name '\.DS_Store' -print -delete"
alias lock_screen="/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend"
# -----------------------------------------------------------------------------


# works on osx mojave only
# -----------------------------------------------------------------------------
# app_lightmode() {
#     if [[ ${#} -ge 1 ]]; then
#         app_bundle=$(osascript -e "id of app \"${1}\"")
#         switch="on"
#         if [[ "${2}" == "on" || "${2}" == "off" ]]; then
#             switch="${2}"
#         fi
#         echo "turning switch ${switch} to ${1}"
#         if [[ "${switch}" == "on" ]]; then
#             defaults write "${app_bundle}" NSRequiresAquaSystemAppearance -bool yes
#         else
#             defaults delete "${app_bundle}" NSRequiresAquaSystemAppearance
#         fi
#         echo "Please restart ${1} to see change..."
#     else
#         echo "usage:"
#         echo "app_lightmode name_of_the_app [on/off]"
#         echo "default is: on"
#     fi
# }
# -----------------------------------------------------------------------------


# -----------------------------------------------------------------------------
function whoseport(){
    if [[ ${1} ]]; then
        lsof -i ":${1}"  | grep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn} LISTEN
    else
        echo 'usage: whoseport PORT_NUMBER'
        echo 
        echo '    Thanks to Francesc Campoy for this lovely hack.'
        echo '    Seen at ->'
        echo '               justforfunc #37: sync.Pool from the pool'
        echo '               https://youtu.be/rfXSrgIGrKo?t=160'
        echo '    Find process information of given (address already in use) PORT_NUMBER'
        echo
        echo '       whoseport 8000'
        echo '       whoseport 8080'
        echo
    fi
}
# -----------------------------------------------------------------------------
