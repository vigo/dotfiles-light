#!/usr/bin/env bash

set -e

get_mysql_status() {
    if [[ $(command -v mysql.server) ]]; then
        mysql_status=$(mysql.server status)
        regex="running \(([0-9]+)\)"
        if [[ "${mysql_status}" =~ $regex ]]; then
            DFL_DB_MYSQL_PROMPT_ICON="${DFL_DB_MYSQL_PROMPT_ICON:-MySQL}"
            # mysql_pid=${BASH_REMATCH[1]}
            out="${DFL_DB_MYSQL_PROMPT_ICON}"
            if [[ "${DFL_DB_MYSQL_PROMPT_COLOR}" ]]; then
                out="${DFL_DB_MYSQL_PROMPT_COLOR}${DFL_PROMPT_BRACKET_OPEN}${out}${DFL_PROMPT_BRACKET_CLOSE}${COLOR_OFF}"
            fi
            printf "%b" "${out}"
        fi
    fi
    
}

get_postgresql_status() {
    postgresql_status=""
    DFL_DB_POSTGRESQL_PROMPT_ICON="${DFL_DB_POSTGRESQL_PROMPT_ICON:-PG}"

    if [[ $(command -v pg_ctl) ]] && [[ -n "${PGDATA}" ]]; then
        postgresql_local_status=$(pg_ctl status -D "${PGDATA}")
        if [[ -n "${postgresql_local_status}" ]]; then
            postgresql_status="${postgresql_local_status}"
            out="${DFL_DB_POSTGRESQL_PROMPT_ICON}"
        fi
    fi
    
    if [[ $(command -v docker) ]]; then
        postgresql_docker_status=$(docker exec -it --user postgres "${DFL_DOCKER_PG_CONTAINER_NAME}" pg_ctl status 2> /dev/null)
        if [[ -n "${postgresql_docker_status}" ]]; then
            postgresql_status="${postgresql_docker_status}"
            DFL_DB_POSTGRESQL_DOCKER_ICON="${DFL_DB_POSTGRESQL_DOCKER_ICON:-ðŸš¢}"
            out="${out} ${DFL_DB_POSTGRESQL_DOCKER_ICON}"
        fi
    fi
    
    if [[ -n "${postgresql_status}" ]]; then
        regex="running \(PID: ([0-9]+)\)"
        if [[ ${postgresql_status} =~ $regex ]]; then
            # postgresql_pid=${BASH_REMATCH[1]}
            
            if [[ "${DFL_DB_POSTGRESQL_PROMPT_COLOR}" ]]; then
                out="${DFL_DB_POSTGRESQL_PROMPT_COLOR}${DFL_PROMPT_BRACKET_OPEN}${out}${DFL_PROMPT_BRACKET_CLOSE}${COLOR_OFF}"
            fi
            
            if [[ -n "${DATABASE_URL}" ]]; then
                out="${out} $(basename "${DATABASE_URL}")"
            fi
            
            printf "%b" "${out}"
        fi
    fi
}

get_redis_status() {
    if [[ $(command -v redis-cli) ]]; then
        if [[ $(redis-cli ping 2>/dev/null) == "PONG" ]]; then
            DFL_DB_REDIS_PROMPT_ICON="${DFL_DB_REDIS_PROMPT_ICON:-REDIS}"
            
            out="${DFL_DB_REDIS_PROMPT_ICON}"
            if [[ "${DFL_DB_REDIS_PROMPT_COLOR}" ]]; then
                out="${DFL_DB_REDIS_PROMPT_COLOR}${DFL_PROMPT_BRACKET_OPEN}${out}${DFL_PROMPT_BRACKET_CLOSE}${COLOR_OFF}"
            fi
            echo "${out}"
        fi
    fi
}

get_mongodb_status() {
    if [[ $(command -v mongod) ]]; then
        if [[ -n "$(pgrep mongod)" ]]; then
            DFL_DB_MONGODB_PROMPT_ICON="${DFL_DB_MONGODB_PROMPT_ICON:-MONGODB}"

            out="${DFL_DB_MONGODB_PROMPT_ICON}"
            if [[ "${DFL_DB_MONGODB_PROMPT_COLOR}" ]]; then
                out="${DFL_DB_MONGODB_PROMPT_COLOR}${DFL_PROMPT_BRACKET_OPEN}${out}${DFL_PROMPT_BRACKET_CLOSE}${COLOR_OFF}"
            fi
            echo "${out}"
        fi
    fi
}

if [[ $(uname) == "Darwin" ]]; then
    mysql_status=$(get_mysql_status)
    postgresql_status=$(get_postgresql_status)
    redis_status=$(get_redis_status)
    mongodb_status=$(get_mongodb_status)
    echo "${mysql_status}${postgresql_status}${redis_status}${mongodb_status}"
fi
